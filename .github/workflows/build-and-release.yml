# .github/workflows/build-and-release.yml

name: Build and Release AyuGram for Linux

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to build (e.g., 5.16.3). Required for automated/release runs.'
        required: false # 改为非必须，手动Debug时可不填
      commit_sha:
        description: 'Commit SHA or Tag to build from (e.g., v5.16.3 or dev). Defaults to "dev".'
        required: false
        default: 'dev'
      build_type:
        description: 'Build type'
        required: true
        type: choice
        default: 'Release'
        options:
        - Release
        - Debug

permissions:
  contents: write # Release 需要
  actions: read   # Debug 需要

jobs:
  build_linux: # Job 名称改为更通用
    runs-on: ubuntu-latest
    
    steps:
      - name: Setup Build Variables
        id: setup_vars
        run: |
          VERSION="${{ github.event.inputs.version }}"
          BUILD_TYPE="${{ github.event.inputs.build_type }}"
          
          # 根据构建类型设置二进制文件路径
          if [ "$BUILD_TYPE" == "Release" ]; then
            BINARY_PATH="./tdesktop/out/Release/AyuGram"
            # 只有 Release 才需要发布信息
            if [ -n "$VERSION" ]; then
              echo "VERSION_TAG=v${VERSION}-linux" >> $GITHUB_OUTPUT
              echo "RELEASE_NAME=AyuGram v${VERSION} (Linux Build)" >> $GITHUB_OUTPUT
              echo "ASSET_NAME=AyuGram-${VERSION}-linux-x64" >> $GITHUB_OUTPUT
            fi
          else
            BINARY_PATH="./tdesktop/out/Debug/AyuGram"
          fi
          
          echo "BINARY_PATH=$BINARY_PATH" >> $GITHUB_ENV # 设定为环境变量供后续步骤使用
          echo "Binary path set to: $BINARY_PATH"

      - name: Checkout AyuGram source code
        uses: actions/checkout@v4
        with:
          repository: AyuGram/AyuGramDesktop
          ref: ${{ github.event.inputs.commit_sha || 'dev' }} # 如果不提供，默认为 dev
          path: tdesktop
          submodules: 'recursive'

      - name: Build AyuGram with Docker
        working-directory: ./tdesktop
        run: |
          DOCKER_ARGS="--rm -u $(id -u):$(id -g) -v $PWD:/usr/src/tdesktop"
          # 动态传入构建类型给 CMAKE
          BUILD_TYPE_ARG="-D CMAKE_BUILD_TYPE=${{ github.event.inputs.build_type }}"
          
          docker run $DOCKER_ARGS \
            ghcr.io/telegramdesktop/tdesktop/centos_env:latest \
            /usr/src/tdesktop/Telegram/build/docker/centos_env/build.sh \
            -D TDESKTOP_API_ID=2040 \
            -D TDESKTOP_API_HASH=b18441a1ff607e10a989891a5462e627 \
            $BUILD_TYPE_ARG

      - name: Check if binary exists
        id: check_file
        run: |
          if [ -f "${{ env.BINARY_PATH }}" ]; then
            echo "Binary found at ${{ env.BINARY_PATH }}"
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "Binary NOT found at ${{ env.BINARY_PATH }}"
            echo "exists=false" >> $GITHUB_OUTPUT
          fi
          
      # ===============================================================
      #  RELEASE-ONLY STEPS (Strip, Create Release, Upload to Release)
      # ===============================================================

      - name: Strip binary to reduce size
        if: steps.check_file.outputs.exists == 'true' && github.event.inputs.build_type == 'Release'
        run: |
          echo "Stripping the release binary..."
          strip "${{ env.BINARY_PATH }}"
          ls -lh "${{ env.BINARY_PATH }}"

      - name: Create GitHub Release
        if: steps.check_file.outputs.exists == 'true' && github.event.inputs.build_type == 'Release' && github.event.inputs.version != ''
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ steps.setup_vars.outputs.VERSION_TAG }}
          release_name: ${{ steps.setup_vars.outputs.RELEASE_NAME }}
          body: |
            Automated Linux build for AyuGram **${{ github.event.inputs.version }}**.
            Triggered by upstream release: `AyuGram/AyuGramDesktop@${{ github.event.inputs.commit_sha }}`
          draft: false
          prerelease: false

      - name: Upload Release Asset
        if: steps.create_release.outputs.upload_url != ''
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ${{ env.BINARY_PATH }}
          asset_name: ${{ steps.setup_vars.outputs.ASSET_NAME }}
          asset_content_type: application/octet-stream
          
      # ===============================================================
      #  DEBUG-ONLY STEP (Upload as Artifact)
      # ===============================================================

      - name: Upload Debug Artifact
        if: steps.check_file.outputs.exists == 'true' && github.event.inputs.build_type == 'Debug'
        uses: actions/upload-artifact@v4
        with:
          name: AyuGram-Debug-Build-Linux
          path: ${{ env.BINARY_PATH }}
