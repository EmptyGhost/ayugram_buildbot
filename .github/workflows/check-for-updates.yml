# .github/workflows/check-for-updates.yml

name: Check for AyuGram Updates

on:
  workflow_dispatch:
  schedule:
    # 每小时运行一次
    - cron: '15 */4 * * *'

permissions:
  actions: write
  contents: read

jobs:
  check_new_version:
    runs-on: ubuntu-latest
    steps:
      - name: Get latest release tag from this repository
        id: get_own_release
        run: |
          LATEST_OWN_TAG=$(gh release list --repo ${{ github.repository }} --limit 1 --json tagName --jq '.[0].tagName' || echo "")
          echo "Our latest release tag: ${LATEST_OWN_TAG:-'None'}"
          OUR_VERSION=$(echo "$LATEST_OWN_TAG" | sed -n 's/^v\([0-9.]*\).*/\1/p')
          
          # 正确的语法: 写入 GITHUB_OUTPUT 文件
          echo "our_version=${OUR_VERSION}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          
      - name: Get latest release tag from AyuGram/AyuGramDesktop
        id: get_upstream_release
        run: |
          LATEST_UPSTREAM_TAG=$(gh release list --repo AyuGram/AyuGramDesktop --limit 1 --json tagName --jq '.[0].tagName' || echo "")
          if [ -z "$LATEST_UPSTREAM_TAG" ]; then
            echo "Could not find any releases on upstream repository. Skipping."
            exit 0
          fi
          echo "Upstream latest release tag: $LATEST_UPSTREAM_TAG"
          UPSTREAM_VERSION=$(echo "$LATEST_UPSTREAM_TAG" | sed -n 's/^v\([0-9.]*\).*/\1/p')

          # 正确的语法: 写入 GITHUB_OUTPUT 文件
          echo "upstream_version=${UPSTREAM_VERSION}" >> $GITHUB_OUTPUT
          echo "upstream_tag=${LATEST_UPSTREAM_TAG}" >> $GITHUB_OUTPUT
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Compare versions and trigger build if needed
        if: steps.get_upstream_release.outputs.upstream_version != '' && steps.get_upstream_release.outputs.upstream_version != steps.get_own_release.outputs.our_version
        run: |
          echo "New version found! Dispatching build for version ${{ steps.get_upstream_release.outputs.upstream_version }}"
          gh workflow run build-and-release.yml \
            -R ${{ github.repository }} \
            -f version=${{ steps.get_upstream_release.outputs.upstream_version }} \
            -f commit_sha=${{ steps.get_upstream_release.outputs.upstream_tag }} \
            -f build_type=Release
        env:
          GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
